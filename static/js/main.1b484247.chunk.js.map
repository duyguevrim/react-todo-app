{"version":3,"sources":["redux/actions.js","components/PrimaryButton.js","components/TodoItem.js","components/TodoList.js","components/AddTodo.js","assets/logo.png","components/Navbar.js","App.js","redux/states.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","PrimaryButton","className","onClick","this","props","myClick","type","isIncludeIcon","title","jsx","color","bgColor","Component","notify","isSuccess","message","toast","success","error","TodoItem","todo","useState","show","setShow","name","setName","handleClose","Date","startDate","setStartDate","dispatch","useDispatch","moment","date","format","fromNow","todoId","id","payload","Modal","centered","dialogClassName","aria-labelledby","onHide","Header","closeButton","Title","Body","onChange","e","target","value","selected","Footer","updateTodo","TodoList","todos","useSelector","state","map","AddTodo","placeholder","console","log","undefined","uuid","Navbar","alt","src","logo","width","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","JSON","parse","localStorage","getItem","setItem","stringify","store","createStore","action","newTodos","push","index","i","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b484247.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport function addTodo(todo){\r\n    return{\r\n        type:ADD_TODO,\r\n        payload: todo,\r\n    }\r\n}\r\n\r\nexport function deleteTodo(todoId){\r\n    return{\r\n        type:DELETE_TODO,\r\n        payload: todoId,\r\n    }\r\n}\r\n\r\nexport function updateTodo(todo){\r\n    return{\r\n        type:UPDATE_TODO,\r\n        payload: todo,\r\n    }\r\n}\r\n","import {FaPlus} from \"react-icons/fa\";\r\nimport {Component} from \"react\";\r\n\r\nclass PrimaryButton extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"pt-3\">\r\n                    <button onClick={this.props.myClick} type=\"button\">\r\n                        {this.props.isIncludeIcon ? <FaPlus/> : null}\r\n                        <span>{this.props.title}</span>\r\n                    </button>\r\n                </div>\r\n                <style jsx>{`\r\n                  button {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    text-align: center;\r\n                    text-decoration: none;\r\n                    margin: 2px 0;\r\n                    border: transparent;\r\n                    border-radius: 6px;\r\n                    color: ${this.props.color};\r\n                    font-size: 1rem;\r\n                    padding: .8rem 1.5rem;\r\n                    font-weight: 600;\r\n                    background: ${this.props.bgColor};\r\n                    cursor: pointer;\r\n                  }\r\n\r\n                  button:hover {\r\n                    color: ${this.props.bgColor};\r\n                    background-color: ${this.props.color};\r\n                  }\r\n                `}</style>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PrimaryButton;\r\n","import {useDispatch} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {deleteTodo, updateTodo} from \"../redux/actions\";\r\nimport {FaEdit, FaTrashAlt} from \"react-icons/all\";\r\nimport React, {useState} from \"react\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"./PrimaryButton\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nfunction notify(isSuccess, message) {\r\n    if (isSuccess)\r\n        toast.success(message);\r\n    else\r\n        toast.error(message);\r\n}\r\n\r\nconst TodoItem = ({todo}) => {\r\n    const [show, setShow] = useState(false);\r\n    let [name, setName] = useState(todo.name);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    let dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <li\r\n                className=\"todo d-flex align-items-center justify-content-between pt-4\">\r\n                <div className=\"d-flex pl-1\">\r\n                    <span className=\"bullet bullet-bar bg-success align-self-stretch\"></span>\r\n                    <div>\r\n                        <p className=\"todo-text m-0 pl-2\">{todo.name}</p>\r\n                        <span className=\"text-muted font-weight-bold pl-2\">\r\n                                                    {moment(todo.date).format(\"Do MMM YY\") + \" (\" + moment(todo.date, \"YYYYMMDD\").fromNow() + \")\"}\r\n                                                </span>\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <a onClick={handleShow} className=\"edit-icon pr-4\">\r\n                        <FaEdit/>\r\n                    </a>\r\n                    <a onClick={() => dispatch(deleteTodo(todo.id))} className=\"delete-icon pr-4\">\r\n                        <FaTrashAlt/>\r\n                    </a>\r\n                </div>\r\n                <Modal centered dialogClassName=\"modal-90w\" aria-labelledby=\"example-custom-modal-styling-title\"\r\n                       show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Update Todo Modal</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"p-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-title\">Todo Content</label>\r\n                            <input className=\"form-control modal-input\" type=\"text\"\r\n                                   onChange={(e) => setName(e.target.value)}\r\n                                   value={name}/>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-title\">Todo Date</label>\r\n                            <DatePicker className=\"form-control modal-input\" selected={startDate}\r\n                                        onChange={date => setStartDate(date)}/>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <PrimaryButton\r\n                            title=\"Close\"\r\n                            myClick={handleClose}\r\n                            isIncludeIcon={false}\r\n                            bgColor=\"#E1F0FF\"\r\n                            color=\"#3699FF\"\r\n                        />\r\n                        <PrimaryButton\r\n                            title=\"Save Changes\"\r\n                            myClick={() => {\r\n                                if (name === \"\") {\r\n                                    notify(false, \"Boş todo girişi yapamazsınız. Lütfen geçerli bir todo giriniz...\");\r\n                                } else {\r\n                                    dispatch(updateTodo({\r\n                                        ...todo,\r\n                                        name: name,\r\n                                        date: startDate\r\n                                    }))\r\n                                    notify(true, \"Todo başarıyla güncellendi...\");\r\n                                    handleClose();\r\n                                }\r\n                            }}\r\n                            isIncludeIcon={false}\r\n                            bgColor=\"#E1F0FF\"\r\n                            color=\"#3699FF\"\r\n                        />\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </li>\r\n            <style jsx>{\r\n                `\r\n                  .modal-90w {\r\n                    width: 1000px !important;\r\n\r\n                  }\r\n                  .text-muted {\r\n                    color: #B5B5C3 !important;\r\n                  }\r\n                  .bullet.bullet-bar {\r\n                    width: 4px;\r\n                    height: auto;\r\n                  }\r\n                  .bullet {\r\n                    display: inline-block;\r\n                    background-color: #E4E6EF;\r\n                    width: 10px;\r\n                    height: 2px;\r\n                    border-radius: 2rem;\r\n                    margin-left: 1rem;\r\n                  }\r\n                  .bg-success {\r\n                    background-color: #3699FF !important;\r\n                  }\r\n                  .form-title {\r\n                    font-size: 1.2rem;\r\n                    font-weight: bold;\r\n                  }\r\n                  .modal-input {\r\n                    padding: 1rem !important;\r\n                    background: #F3F6F9;\r\n                    border-color: white;\r\n                    color: #3F4254;\r\n                    height: 55px;\r\n                    border-radius: 0.85rem !important;\r\n                  }\r\n                  .delete-icon {\r\n                    color: #F64E60 !important;\r\n                    cursor: pointer;\r\n                    padding-right: 2rem;\r\n                    font-size: 2em;\r\n                  }\r\n                  .edit-icon {\r\n                    color: #FFA800 !important;\r\n                    cursor: pointer;\r\n                    padding-right: 2rem;\r\n                    font-size: 2em;\r\n                  }\r\n                `\r\n            }</style>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = () => {\r\n\r\n    let todos = useSelector(state => state)\r\n    return (\r\n        <>\r\n            <div className=\"pt-5\">\r\n                <div className=\"card-custom py-4\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h3 className=\"text-dark card-title pl-4\">Todo List</h3>\r\n                    </div>\r\n                    <ul>\r\n                        {todos.map((todo) => {\r\n                            return <TodoItem key={todo.id} todo={todo}/>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <style jsx>{`\r\n                  .text-dark {\r\n                    color: #181C32 !important;\r\n                  }\r\n           \r\n                  .card-custom {\r\n                    -webkit-box-shadow: 0px 0px 30px 0px rgb(82 63 105 / 5%);\r\n                    box-shadow: 0px 0px 30px 0px rgb(82 63 105 / 5%);\r\n                    border: 0;\r\n                    background: white;\r\n                    border-radius: 0.42rem;\r\n                  }\r\n                `}</style>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React, {useState} from \"react\";\r\nimport PrimaryButton from \"./PrimaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport {v1 as uuid} from 'uuid';\r\nimport {addTodo} from \"../redux/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nfunction notify(isSuccess, message) {\r\n    if (isSuccess)\r\n        toast.success(message);\r\n    else\r\n        toast.error(message);\r\n}\r\n\r\nconst AddTodo = () => {\r\n    let [name, setName] = useState();\r\n    let dispatch = useDispatch();\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex flex-column\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"font-size-h6\">Add Todo</label>\r\n                    <input placeholder=\"Write your todo...\"  className=\"form-control mt-2\" type=\"text\"\r\n                           onChange={(e) => setName(e.target.value)}\r\n                           value={name}/>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <DatePicker className=\"form-control mt-2\" selected={startDate} onChange={date => setStartDate(date)} />\r\n                </div>\r\n                <PrimaryButton\r\n                    title=\"Add New Todo\"\r\n                    myClick={() => {\r\n                        console.log(name);\r\n                        if(name === \"\" || name === undefined){\r\n                            notify(false, \"Boş todo girişi yapamazsınız. Lütfen geçerli bir todo giriniz...\");\r\n                        }\r\n                        else{\r\n                            dispatch(addTodo({\r\n                                id: uuid(),\r\n                                name: name,\r\n                                date: startDate\r\n                            }))\r\n                            notify(true, 'Todo başarıyla eklenmiştir...');\r\n                            setName('');\r\n                        }\r\n                    }}\r\n                    isIncludeIcon={true}\r\n                    bgColor=\"#E1F0FF\"\r\n                    color=\"#3699FF\"\r\n                />\r\n                <ToastContainer/>\r\n            </div>\r\n            <style jsx>{\r\n                `\r\n                  .form-control:focus {\r\n                    border: red !important;\r\n                  }\r\n\r\n                  .font-size-h6 {\r\n                    font-size: 1.75rem !important;\r\n                  }\r\n\r\n                  .form-control {\r\n                    padding: 1rem !important;\r\n                    background: white;\r\n                    border-color: white;\r\n                    color: #3F4254;\r\n                    height: 55px;\r\n                    border-radius: 0.85rem !important;\r\n                  }\r\n                `\r\n            }</style>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTodo;\r\n","export default __webpack_public_path__ + \"static/media/logo.57147a5d.png\";","import logo from '../assets/logo.png'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mt-5\">\r\n                <div className=\"d-flex justify-content-center align-items-center pt-4\">\r\n                    <img alt=\"Todo List Icon\" src={logo}\r\n                         width=\"100\" height=\"100\" /></div>\r\n                <h2 className=\"text-center pt-2 font-weight-bold\">Todo List</h2>\r\n                <hr />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar;\r\n","import './App.css';\nimport TodoList from \"./components/TodoList\";\nimport AddTodo from \"./components/AddTodo\";\nimport Navbar from \"./components/Navbar\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n    return (\n            <div className=\"container w-30\">\n                <Navbar />\n                <AddTodo/>\n                <TodoList/>\n            </div>\n    );\n}\n\nexport default App;\n","export let todos;\r\n\r\nif (JSON.parse(localStorage.getItem(\"todos\"))) {\r\n    todos = JSON.parse(localStorage.getItem(\"todos\"));\r\n} else {\r\n    todos = [];\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_TODO, UPDATE_TODO, DELETE_TODO} from './actions';\r\nimport {todos} from \"./states\";\r\n\r\nexport let reducer = (state = todos, action) => {\r\n    let newTodos = [...state];\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            newTodos.push(action.payload);\r\n            localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n            return newTodos;\r\n        case UPDATE_TODO:\r\n            let index = -1;\r\n            for (let i = 0; i < newTodos.length; i++) {\r\n                index++;\r\n                if (newTodos[i].id == action.payload.id) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index != -1) {\r\n                newTodos[index] = action.payload;\r\n                localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n                return newTodos;\r\n            }\r\n        case DELETE_TODO:\r\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\r\n            localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n            return newTodos;\r\n        default:\r\n\r\n            return state;\r\n    }\r\n}\r\n","import {createStore} from \"redux\";\r\nimport {reducer} from \"./reducer\";\r\n\r\nexport let store = createStore(reducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}> <App/></Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}